# The log level to use.  Valid values are SEVERE, WARNING, INFO, CONFIG,
# FINE, FINER, and FINEST, in ascending order of verbosity.
# This defaults to INFO if not set.
log-level=INFO

# The JSON model file to use.  This must be specified.
# The test framework will fail if this property is not set.
model-path=vb-model.json

# Whether or not to set up all the VMs prior to running the tests
# Defaults to true
# "False" is only really useful for test case development and/or debugging
perform-setup=true

# Whether or not to skip tests that are not supported.
# Non supported tests are tests that require a role that does not exist on the model,
# or tests that query a parameter that does not exist on the context
skip-not-supported-tests=true

# Whether or not to tear down all the non-static VMs upon test run completion
# Defaults to true
# "False" is only really useful for framework development and/or debugging
perform-teardown=true

# Whether or not to destroy non-static components if exist on start up
# if 'false', setup will fail if leftover components exist on start up
destroy-leftover-dynamic-components=true

# Whether or not to run puppet installation in serial
single-thread-puppet-installation=false

# Whether remove or preserve information about skipped tests in the testng reports and MongoDB
# if 'false', skipped tests will be logged
remove-skipped-results=true

# Whether or not to post the test results to MongoDB; defaults to false
post-to-mongo=false

# The hostname of the MongoDB to report test results to
mongo-host=badger.dlouvton.net

# The MongoDB collection to report test results to
mongo-collection=main

# Whether or not to rerun the puppet installer on static components that are already provisioned
reinstall-static-components=false

# Whether or not to rerun the shell configurator on static components that are already provisioned
reconfigure-static-components=true

# Additional fields to post to the MongoDB, along with the test results
additional-fields-to-post=model-path,provision-time

# How to post the test run log and testng report to MongoDB
post-files-to-mongo=true

# The name of the private key to use.  Note that this is the aws name,
# not necessarily the path to a file on disk.
private-key="badger-automation-key-pair"

# The path to the private key file.  This is the path to the file on disk,
# not necessarily the aws name.
private-key-path="./badger-automation-key-pair"

# The endpoint to hit to create and manipulate VMs.  This should only be
# changed if, for example, you want to use a aws cluster in a different
# data center.
endpoint="http://<url>/ec2/"

# Whether or not to create the instances in parallel or sequentially
# when false, instances will be brought up sequentially
create-instances-in-parallel=true

# If tests run with the JAR option (where Badger is not installed as an API server), then an Environment with the environment ID below will be created
environment-id=1
